openapi: 3.0.0
info:
  title: Recipes api
  description: API for recipes project
  version: 1.0.1
servers:
# local:
- url: "http://127.0.0.1:3000"
# remote:
# - url: "http://132.72.65.211"
  description: SwaggerHub API Auto Mocking hey
tags:
- name: Auth
  description: All authentication related routes
- name: Users
  description: All the user's personal app info
- name: Recipes
  description: All reciepes general info
paths:
  /register:
    post:
      tags:
      - Auth
      summary: A new user from the client is added to the server
      description: A JSON object contains all the details about the new user.
      requestBody:
        description: Inventory item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "201":
          description: A new user has been added
        "400":
          description: wrong input parameters
  /login:
    post:
      tags:
      - Auth
      summary: Login an exist user
      description: An exist user login to the system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginScheme'
        required: true
      responses:
        "200":
          description: |
            User was found in the DB and authenitcated successfully. The session ID is returned in a cookie named `session`.  You should include this cookie in subsequent requests
          headers:
            Set-Cookie:
              style: simple
              explode: false
              schema:
                type: string
                example: session=87s97sdhgf279293f8w0e9
        "401":
          description: Authentication failed
  /logout:
    post:
      tags:
        - Auth
      summary: logout a user from the system and delete his cookie
      responses:
        "200":
          description: "the user has ben successfully logged out"
  /users/addRecipe:
    post:
      tags:
      - Users
      summary: A new recipe from the client is added to the server
      description: A JSON object contains all the details about the new recipe.
      requestBody:
        description: Inventory item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddRecipe'
        required: true
      responses:
        "201":
          description: A new recipe has been added
        "400":
          description: wrong input parameters
  /users/ThreelastView:
    get:
      tags:
      - Users
      summary: Return the 3 last viewd recipes that were viewed by user
      description: Get an array of recipes that were viewd by the user
      responses:
        "200":
          description: data about the user's last viewed recipes returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
        "401":
          description: data about the user's last viewed recipes dosent returned
      security:
      - cookieAuth: []
  /users/favorites:
    get:
      tags:
      - Users
      summary: Return the favorite recipes that were saved by user
      description: Get an array of recipes that were saved by a specific user
      responses:
        "200":
          description: data about the user's favorites recipes returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
    post:
      tags:
      - Users
      summary: save recipe in the favorites list of a user
      description: save recipe in the favorites list of a user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reciepeId:
                  type: string
                  description: reciepe's id which the user saved
                  example: 716429
      responses:
        "200":
          description: The Recipe successfully saved as favorite
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
  /users/UserViewed:
    get:
      tags:
      - Users
      summary: Return the recipes that were watched by user
      description: Get an array of recipes that were watched by a specific user
      responses:
        "200":
          description: data about the user's watched recipes returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/watchedRecipePreview'
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
    post:
      tags:
      - Users
      summary: save recipe in the viewed list of a user
      description: save recipe in the viewed list of a user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reciepeId:
                  type: string
                  description: reciepe's id which the user watched
                  example: 716429
      responses:
        "200":
          description: The Recipe successfully saved as viewed recipe
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
  /users/returnMyRecipe:
    get:
      tags:
      - Users
      summary: Return the user recipes 
      description: Get an array of recipes that were made by a specific user
      responses:
        "200":
          description: data about the user's recipes returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MyRecipePreview'
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
  /users/returnMyFamilyRecipe:
    get:
      tags:
      - Users
      summary: Return the user family recipes 
      description: Get an array of family recipes that were made by a specific user
      responses:
        "200":
          description: data about the user's family recipes returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MyRecipePreview'
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
    /users/returnMyFullRecipe/{recipeId}:
      get:
      tags:
      - Recipes
      summary:  returns the information needed to present the full recipe.
      description:  returns the information needed to present the full recipe.
      parameters:
      - name: recipeId
        in: path
        description: the uniqe id of the recipe.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: full data about the recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeFullPreview'
        "404":
          description: recipeId is not exists
  /recipes/{recipeId}:
    get:
      tags:
      - Recipes
      summary: Return preview details on recipe by his ID
      description: Return preview details on recipe by his ID
      parameters:
      - name: recipeId
        in: path
        description: recipe's id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: data about the recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipePreview'
        "404":
          description: recipeId is not exists
  /recipes/getRandomRecipes:
    get:
      tags:
      - Recipes
      summary: Return random recipes details
      description: Return random recipes details
      responses:
        "200":
          description: data about the random recipes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipePreview'
        "404":
          description: random recipes not found
  /recipes/getFullRecipe/{recipeId}:
    get:
      tags:
      - Recipes
      summary:  returns the information needed to present the full recipe.
      description:  returns the information needed to present the full recipe.
      parameters:
      - name: recipeId
        in: path
        description: the uniqe id of the recipe.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: full data about the recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeFullPreview'
        "404":
          description: recipeId is not exists
 
  /recipes/search/{query},{number},{cuisine},{diet},{intolerances},{sort}:
    get:
      tags:
      - Recipes
      summary:  returns the relevent recipes for the searched text
      description:  returns the relevent recipes for the searched text
      parameters:
      - name: query
        in: path
        description: the query to search.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: number
        in: path
        description: amount to search.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: cuisine
        in: path
        description: kitchen to search.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: diet
        in: path
        description: diet to search.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: intolerances
        in: path
        description: intolerances to search.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sort
        in: path
        description: way to sort the search result.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: recipes found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchPreview'
        "404":
          description: recipes was not exists
components:
  schemas:
    User:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: username conatins between 3 to 8 letters only
          example: my_name
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: password conatins between 5 to 10 chars, at least one of them
            is a number and a special char
          format: password
          example: my_name@12
        firstname:
          type: string
          description: user's first name
          example: my_first_name
        lastname:
          type: string
          description: user's last name
          example: my_last_name
        country:
          type: string
          description: user's country
          example: Israel
        email:
          pattern: email
          type: string
          description: user's email
          example: my_name12@gmail.com
        # image-url:
        #   pattern: URL
        #   type: string
        #   description: URL for the user's image
        #   example: https://cloudinary.com/
      description: Model containing user info
    LoginScheme:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: username conatins letters only
        password:
          maxLength: 10
          minLength: 5
          description: password conatins at least one number and one special char
          format: password
      example:
        username: my_name
        password: my_name@12
    RecipePreview:
      type: object
      properties:
        id:
          type: integer
          description: recipe identifier
          example: 102
        title:
          type: string
          description: recipe name
          example: Simple Macaroni and Cheese
        image:
          type: string
          description: recipe image
          format: URL
          example: https://spoonacular.com/recipeimages/655455-566x370.jpg
        readyInMinutes:
          type: integer
          description: the time takes to make this recipe
          example: 45
        popularity:
          type: integer
          description: how many likes got this recipe
          example: 5987
        vegetarian:
          type: boolean
          description: indication if the recipe is vegetarian
          example: false
        vegan:
          type: boolean
          description: indication if the recipe is vegan
          example: false
        glutenFree:
          type: boolean
          description: indication if the recipe is gluten free
          example: false
    MyRecipePreview:
      type: object
      properties:
        id:
          type: integer
          description: recipe identifier
          example: 102
        title:
          type: string
          description: recipe name
          example: Simple Macaroni and Cheese
        image:
          type: string
          description: recipe image
          format: URL
          example: https://spoonacular.com/recipeimages/655455-566x370.jpg
        readyInMinutes:
          type: string
          description: the time takes to make this recipe
          example: "45"
        popularity:
          type: integer
          description: how many likes got this recipe
          example: 5987
        vegetarian:
          type: integer
          description: indication if the recipe is vegetarian
          example: 0
        vegan:
          type: integer
          description: indication if the recipe is vegan
          example: 0
        glutenFree:
          type: integer
          description: indication if the recipe is gluten free
          example: 1
    RecipeFullPreview:
      type: object
      properties:
        id:
          type: integer
          description: recipe identifier
          example: 102
        title:
          type: string
          description: recipe name
          example: Simple Macaroni and Cheese
        image:
          type: string
          description: recipe image
          format: URL
          example: https://spoonacular.com/recipeimages/655455-566x370.jpg
        servings:
          type: integer
          description: amount
          example: 2
        readyInMinutes:
          type: integer
          description: the time takes to make this recipe
          example: 45
        popularity:
          type: integer
          description: how many likes got this recipe
          example: 5987
        vegetarian:
          type: boolean
          description: indication if the recipe is vegetarian
          example: false
        vegan:
          type: boolean
          description: indication if the recipe is vegan
          example: false
        glutenFree:
          type: boolean
          description: indication if the recipe is gluten free
          example: false
        extendedIngredients:
          type: array
          description:  Ingredients for the recipe
          example: [{ "aisle": "Milk, Eggs, Other Dairy",
            "amount": 1.0,
            "consitency": "solid",
            "id": 1001,
            "image": "butter-sliced.jpg",
            "measures": {
                "metric": {
                    "amount": 1.0,
                    "unitLong": "Tbsp",
                    "unitShort": "Tbsp"
                },
                "us": {
                    "amount": 1.0,
                    "unitLong": "Tbsp",
                    "unitShort": "Tbsp"
                }
            }}]
        analyzedInstructions:
          type: array
          description:  Instrection for the recipe
          example: [{ {
                "equipment": [
                    {
                        "id": 404784,
                        "image": "oven.jpg",
                        "name": "oven",
                        "temperature": {
                            "number": 200.0,
                            "unit": "Fahrenheit"
                        }
                    }
                ],
                "ingredients": [],
                "number": 1,
                "step": "Preheat the oven to 200 degrees F."
            }}]
    SearchPreview:
      type: object
      properties:
        id:
          type: integer
          description: recipe identifier
          example: 102
        title:
          type: string
          description: recipe name
          example: Simple Macaroni and Cheese
        image:
          type: string
          description: recipe image
          format: URL
          example: https://spoonacular.com/recipeimages/655455-566x370.jpg
        readyInMinutes:
          type: integer
          description: the time takes to make this recipe
          example: 45
        popularity:
          type: integer
          description: how many likes got this recipe
          example: 5987
        vegetarian:
          type: boolean
          description: indication if the recipe is vegetarian
          example: false
        vegan:
          type: boolean
          description: indication if the recipe is vegan
          example: false
        glutenFree:
          type: boolean
          description: indication if the recipe is gluten free
          example: false
        analyzedInstructions:
          type: array
          description:  Instrection for the recipe
          example: [{ {
                "equipment": [
                    {
                        "id": 404784,
                        "image": "oven.jpg",
                        "name": "oven",
                        "temperature": {
                            "number": 200.0,
                            "unit": "Fahrenheit"
                        }
                    }
                ],
                "ingredients": [],
                "number": 1,
                "step": "Preheat the oven to 200 degrees F."
            }}]
    UserAddRecipe:
      type: object
      properties:
        id:
          type: integer
          description: recipe identifier
          example: 102
        title:
          type: string
          description: recipe name
          example: Simple Macaroni and Cheese
        image:
          type: string
          description: recipe image
          format: URL
          example: https://spoonacular.com/recipeimages/655455-566x370.jpg
        readyInMinutes:
          type: integer
          description: the time takes to make this recipe
          example: 45
        popularity:
          type: integer
          description: how many likes got this recipe
          example: 5987
        vegetarian:
          type: boolean
          description: indication if the recipe is vegetarian
          example: false
        vegan:
          type: boolean
          description: indication if the recipe is vegan
          example: false
        glutenFree:
          type: boolean
          description: indication if the recipe is gluten free
          example: false
        servings:
          type: integer
          description: amount
          example: 2
        extendedIngredients:
          type: array
          description:  Ingredients for the recipe
          example: [{ "aisle": "Milk, Eggs, Other Dairy",
            "amount": 1.0,
            "consitency": "solid",
            "id": 1001,
            "image": "butter-sliced.jpg",
            "measures": {
                "metric": {
                    "amount": 1.0,
                    "unitLong": "Tbsp",
                    "unitShort": "Tbsp"
                },
                "us": {
                    "amount": 1.0,
                    "unitLong": "Tbsp",
                    "unitShort": "Tbsp"
                }
            }}]
        analyzedInstructions:
          type: array
          description:  Instrection for the recipe
          example: [{ {
                "equipment": [
                    {
                        "id": 404784,
                        "image": "oven.jpg",
                        "name": "oven",
                        "temperature": {
                            "number": 200.0,
                            "unit": "Fahrenheit"
                        }
                    }
                ],
                "ingredients": [],
                "number": 1,
                "step": "Preheat the oven to 200 degrees F."
            }}]
    UserLasrThreeRecipe:
      type: object
      properties:
        user_id:
          type: integer
          description: user identifier
          example: 102
        recipe_id:
          type: integer
          description: recipe identifier
          example: 8
    watchedRecipePreview:
      type: object
      properties:
        id:
          type: integer
          description: recipe identifier
          example: 102
    MyRecipeFullPreview:
      type: object
      properties:
        id:
          type: integer
          description: recipe identifier
          example: 102
        recipe_name:
          type: string
          description: recipe name
          example: Simple Macaroni and Cheese
        img:
          type: string
          description: recipe image
          format: URL
          example: https://spoonacular.com/recipeimages/655455-566x370.jpg
        courses_num:
          type: integer
          description: amount
          example: 2
        recipe_time:
          type: integer
          description: the time takes to make this recipe
          example: 45
        popularity:
          type: integer
          description: how many likes got this recipe
          example: 5987
        vegetarian:
          type: boolean
          description: indication if the recipe is vegetarian
          example: false
        vegan:
          type: boolean
          description: indication if the recipe is vegan
          example: false
        gloten:
          type: boolean
          description: indication if the recipe is gluten free
          example: false
        ingridiants:
          type: array
          description:  Ingredients for the recipe
          example: ["Milk, Eggs, Other Dairy"]
        instructions:
          type: array
          description:  Instrection for the recipe
          example: ["Preheat the oven to 200 degrees F.","make pasta"]




